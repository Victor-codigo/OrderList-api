security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        user_provider:
            id: User\Adapter\Security\Jwt\UserSymfonyProviderAdapter

        user_shared_provider:
            id: Common\Adapter\Security\jwt\UserSharedSymfonyProviderAdapter

    firewalls:

        login:
            pattern: ^/api/v1/users/login
            stateless: true
            provider: user_provider
            json_login:
                check_path: /api/v1/users/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api_user:
            pattern: ^/api/v1/users
            stateless: true
            provider: user_provider
            jwt: ~

        api:
            pattern: ^/api
            stateless: true
            provider: user_shared_provider
            jwt: ~

    access_control:
        # User register
        - { path: ^/api/v1/users$, roles: PUBLIC_ACCESS }

        # User registration confirm
        - { path: ^/api/v1/users/confirm$, roles: PUBLIC_ACCESS }

        # User remember password
        - { path: ^/api/v1/users/remember$, roles: PUBLIC_ACCESS }

        # User password remember confirm
        - { path: ^/api/v1/users/password-remember$, roles: PUBLIC_ACCESS }

        # Share list of orders
        - { path: ^/api/v1/share/list-orders$, methods: "GET", roles: PUBLIC_ACCESS }

        # Api documentation
        - { path: ^/api/doc$, roles: PUBLIC_ACCESS }

        # Api general
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon